/* Command objects */

/* Notification Commands
 *
 * Please check the documentation for all required and
 * optional parameters.
 */

object NotificationCommand "mail-host-notification" {
  command = [ ConfigDir + "/scripts/mail-host-notification.sh" ]

    arguments += {
    "-4" = "$notification_address$"
    "-6" = "$notification_address6$"
    "-b" = "$notification_author$"
    "-c" = "$notification_comment$"
    "-d" = {
      required = true
      value = "$notification_date$"
    }
    "-f" = {
      value = "$notification_from$"
      description = "Set from address. Requires GNU mailutils (Debian/Ubuntu) or mailx (RHEL/SUSE)"
    }
    "-i" = "$notification_icingaweb2url$"
    "-l" = {
      required = true
      value = "$notification_hostname$"
    }
    "-n" = {
      required = true
      value = "$notification_hostdisplayname$"
    }
    "-o" = {
      required = true
      value = "$notification_hostoutput$"
    }
    "-r" = {
      required = true
      value = "$notification_useremail$"
    }
    "-s" = {
      required = true
      value = "$notification_hoststate$"
    }
    "-t" = {
      required = true
      value = "$notification_type$"
    }
    "-v" = "$notification_logtosyslog$"
  }

  vars += {
    notification_address = "$address$"
      notification_address6 = "$address6$"
      notification_author = "$notification.author$"
      notification_comment = "$notification.comment$"
      notification_type = "$notification.type$"
      notification_date = "$icinga.long_date_time$"
      notification_hostname = "$host.name$"
      notification_hostdisplayname = "$host.display_name$"
      notification_hostoutput = "$host.output$"
      notification_hoststate = "$host.state$"
      notification_useremail = "$user.email$"
      }
}

object NotificationCommand "mail-service-notification" {
  command = [ ConfigDir + "/scripts/mail-service-notification.sh" ]

    arguments += {
    "-4" = "$notification_address$"
    "-6" = "$notification_address6$"
    "-b" = "$notification_author$"
    "-c" = "$notification_comment$"
    "-d" = {
      required = true
      value = "$notification_date$"
    }
    "-e" = {
      required = true
      value = "$notification_servicename$"
    }
    "-f" = {
      value = "$notification_from$"
      description = "Set from address. Requires GNU mailutils (Debian/Ubuntu) or mailx (RHEL/SUSE)"
    }
    "-i" = "$notification_icingaweb2url$"
    "-l" = {
      required = true
      value = "$notification_hostname$"
    }
    "-n" = {
      required = true
      value = "$notification_hostdisplayname$"
    }
    "-o" = {
      required = true
      value = "$notification_serviceoutput$"
    }
    "-r" = {
      required = true
      value = "$notification_useremail$"
    }
    "-s" = {
      required = true
      value = "$notification_servicestate$"
    }
    "-t" = {
      required = true
      value = "$notification_type$"
    }
    "-u" = {
      required = true
      value = "$notification_servicedisplayname$"
    }
    "-v" = "$notification_logtosyslog$"
  }

  vars += {
    notification_address = "$address$"
      notification_address6 = "$address6$"
      notification_author = "$notification.author$"
      notification_comment = "$notification.comment$"
      notification_type = "$notification.type$"
      notification_date = "$icinga.long_date_time$"
      notification_hostname = "$host.name$"
      notification_hostdisplayname = "$host.display_name$"
      notification_servicename = "$service.name$"
      notification_serviceoutput = "$service.output$"
      notification_servicestate = "$service.state$"
      notification_useremail = "$user.email$"
      notification_servicedisplayname = "$service.display_name$"
      }
}

/*
 * If you prefer to use the notification scripts with environment
 * variables instead of command line parameters, you can use
 * the following commands. They have been updated from < 2.7
 * to support the new notification scripts and should help
 * with an upgrade.
 * Remove the comment blocks and comment the notification commands above.
 */

/*

  object NotificationCommand "mail-host-notification" {
  command = [ ConfigDir + "/scripts/mail-host-notification.sh" ]

  env = {
  NOTIFICATIONTYPE = "$notification.type$"
  HOSTDISPLAYNAME = "$host.display_name$"
  HOSTNAME = "$host.name$"
  HOSTADDRESS = "$address$"
  HOSTSTATE = "$host.state$"
  LONGDATETIME = "$icinga.long_date_time$"
  HOSTOUTPUT = "$host.output$"
  NOTIFICATIONAUTHORNAME = "$notification.author$"
  NOTIFICATIONCOMMENT = "$notification.comment$"
  HOSTDISPLAYNAME = "$host.display_name$"
  USEREMAIL = "$user.email$"
  }
  }

  object NotificationCommand "mail-service-notification" {
  command = [ ConfigDir + "/scripts/mail-service-notification.sh" ]

  env = {
  NOTIFICATIONTYPE = "$notification.type$"
  SERVICENAME = "$service.name$"
  HOSTNAME = "$host.name$"
  HOSTDISPLAYNAME = "$host.display_name$"
  HOSTADDRESS = "$address$"
  SERVICESTATE = "$service.state$"
  LONGDATETIME = "$icinga.long_date_time$"
  SERVICEOUTPUT = "$service.output$"
  NOTIFICATIONAUTHORNAME = "$notification.author$"
  NOTIFICATIONCOMMENT = "$notification.comment$"
  HOSTDISPLAYNAME = "$host.display_name$"
  SERVICEDISPLAYNAME = "$service.display_name$"
  USEREMAIL = "$user.email$"
  }
  }

*/

# Command to check the total number of running processes
object CheckCommand "snmp_num_procs" {
       
       command = [ PluginDir + "/check_num_procs_snmp.sh" ]
       
       arguments = {
       "-t" = "$addr$"
       "-c" = "$comm$"
       "-W" = "$warn$"
       "-C" = "$crit$"
       }
}

# Command to check if a certain process is running
object CheckCommand "snmp_proc_custom" {

       command = [ PluginDir + "/check_snmp_process.sh" ]	

       arguments = {
       "-t" = "$addr$"
       "-c" = "$comm$"
       "-p" = "$process$"
       }
       
}

# Checks load via snmp - returns 1, 5, and 15 minute averages
object CheckCommand "custom_load" {
       command = [ PluginDir + "/check_cpu.d/check_load" ]
       
       arguments = {
       "-H" = "$host$"
       "-p" = "$comm$"
       "-w" = "$warn$"
       "-c" = "$crit$"
       }

}

# Checks swap via SNMP
object CheckCommand "custom_swap" {

       command = [ PluginDir + "/check_cpu.d/check_swap" ]

       arguments = {
       "-H" = "$host$"
       "-p" = "$comm$"
       "-w" = "$warn$"
       "-c" = "$crit$"
       }

}

# Checks ram via SNMP (kinda broken?)
object CheckCommand "custom_ram" {
       command = [ PluginDir + "/check_cpu.d/check_ram" ]
       
       arguments = {
       "-H" = "$host$"
       "-p" = "$comm$"
       "-w" = "$warn$"
       "-c" = "$crit$"
       "-o" = "above"
       }

}

# Checks CPU load via SNMP
object CheckCommand "custom_cpu" {
       command = [ PluginDir + "/check_cpu.d/check_cpu" ]
       
       arguments = {
       "-H" = "$host$"
       "-p" = "$comm$"
       "-w" = "$warn$"
       "-c" = "$crit$"
       }

}
